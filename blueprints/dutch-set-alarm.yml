blueprint:
  name: "[Voice] Stel wekker in"
  description: Stel wekker in
  domain: automation
  input:
    alarm_entity:
      name: Alarm Entiteit
      description: Selecteer de alarm entiteit die je wilt gebruiken
      selector:
        entity:
          domain: alarm_clock
      required: true
    time:
      name: Tijd
      description: Tijdstip van de wekker (bijv. 7:00, 14:30, 7 uur 's ochtends, over 10 minuten, over 2 uur)
      required: true
      selector:
        text: {}

  trigger:
    - platform: conversation
      pattern:
        - "(Stel|Zet) (een|het) (wekker|alarm) (in|) (om|voor|op|over) {time}"
        - "(Wek|Maak) me wakker (om|voor|over) {time}"
        - "(Alarm|Wekker) (om|voor) {time}"
        - "Wek me 's ochtends om {time}"
        - "Maak me morgenochtend wakker om {time}"
        - "Wek me morgen om {time}"
        - "Maak me morgen wakker om {time}"

  action:
    sequence:
      - choose:
          - conditions: "{{ 'over' in trigger.slot_text.time }}"
            sequence:
              - variables:
                  time_parts: "{{ trigger.slot_text.time.split(' ') }}"
                  time_value: "{{ time_parts[0] | int }}"
                  time_unit: "{{ time_parts[1] | lower }}"
                  now_timestamp: "{{ now().timestamp() }}"
              - choose:
                  - conditions: "{{ time_unit in ['minuten', 'minuut'] }}"
                    sequence:
                      - service: alarm_clock.set_alarm
                        target:
                          entity_id: !input alarm_entity
                        data:
                          time: "{{ (now_timestamp + (time_value * 60)) | timestamp_custom('%H:%M', local=true) }}"
                  
                  - conditions: "{{ time_unit in ['uren', 'uur'] }}"
                    sequence:
                      - service: alarm_clock.set_alarm
                        target:
                          entity_id: !input alarm_entity
                        data:
                          time: "{{ (now_timestamp + (time_value * 3600)) | timestamp_custom('%H:%M', local=true) }}"
                  
                  - conditions: "{{ time_unit in ['seconden', 'seconde'] }}"
                    sequence:
                      - service: alarm_clock.set_alarm
                        target:
                          entity_id: !input alarm_entity
                        data:
                          time: "{{ (now_timestamp + time_value) | timestamp_custom('%H:%M', local=true) }}"
                  
                  default:
                    - service: notify.persistent_notification
                      data:
                        message: "Ongeldige tijdseenheid. Gebruik 'minuten', 'uren' of 'seconden'."
                        title: "Wekker Notificatie"
              
              - if: >-
                  {{ (now_timestamp + (time_value * 60)) | timestamp_custom('%H:%M', local=true) 
                     < now() | timestamp_custom('%H:%M', local=true) }}
                then:
                  - service: notify.persistent_notification
                    data:
                      message: "De ingestelde tijd is in het verleden. Controleer de tijd en probeer het opnieuw."
                      title: "Wekker Notificatie"
          
          default:
            - service: alarm_clock.set_alarm
              target:
                entity_id: !input alarm_entity
              data:
                time: "{{ trigger.slot_text.time }}"
mode: single